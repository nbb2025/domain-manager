// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DomainsColumns holds the columns for the "domains" table.
	DomainsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "provider", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_domains", Type: field.TypeInt, Nullable: true},
	}
	// DomainsTable holds the schema information for the "domains" table.
	DomainsTable = &schema.Table{
		Name:       "domains",
		Columns:    DomainsColumns,
		PrimaryKey: []*schema.Column{DomainsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "domains_users_domains",
				Columns:    []*schema.Column{DomainsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProviderKeysColumns holds the columns for the "provider_keys" table.
	ProviderKeysColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Default: "default"},
		{Name: "provider", Type: field.TypeString},
		{Name: "access_key", Type: field.TypeString},
		{Name: "secret_key", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_provider_keys", Type: field.TypeInt, Nullable: true},
	}
	// ProviderKeysTable holds the schema information for the "provider_keys" table.
	ProviderKeysTable = &schema.Table{
		Name:       "provider_keys",
		Columns:    ProviderKeysColumns,
		PrimaryKey: []*schema.Column{ProviderKeysColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "provider_keys_users_provider_keys",
				Columns:    []*schema.Column{ProviderKeysColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DomainsTable,
		ProviderKeysTable,
		UsersTable,
	}
)

func init() {
	DomainsTable.ForeignKeys[0].RefTable = UsersTable
	ProviderKeysTable.ForeignKeys[0].RefTable = UsersTable
}
